//requisiÃ§ao assincrono
//XMLHttpRequest  ELA FAZ REQUISIÃ‡AO 

const request = obj=>{
 const xhr = new XMLHttpRequest()
 xhr.open(obj.method, obj.url, true);
 xhr.send()


 xhr.addEventListener('load',()=>{
    if(xhr.status >=200 && xhr.status <300){
        obj.success(xhr.responseText)
    }else{
        obj.erro(xhr.statusText)
    }
 })
}


// Claro! Vou explicar cada parte desse cÃ³digo JavaScript:

// DeclaraÃ§Ã£o da FunÃ§Ã£o request:
// A funÃ§Ã£o request Ã© definida com um Ãºnico parÃ¢metro chamado obj.
// Essa funÃ§Ã£o Ã© projetada para fazer uma requisiÃ§Ã£o HTTP assÃ­ncrona (AJAX) usando o objeto XMLHttpRequest.
// CriaÃ§Ã£o do Objeto xhr:
// Dentro da funÃ§Ã£o, criamos um novo objeto XMLHttpRequest chamado xhr.
// O XMLHttpRequest Ã© usado para fazer solicitaÃ§Ãµes HTTP a um servidor.
// ConfiguraÃ§Ã£o da RequisiÃ§Ã£o:
// xhr.open(obj.method, obj.url, true);
// O mÃ©todo open configura os detalhes da requisiÃ§Ã£o.
// obj.method especifica o mÃ©todo HTTP (como GET, POST, etc.).
// obj.url Ã© a URL para a qual a requisiÃ§Ã£o serÃ¡ enviada.
// O terceiro argumento true indica que a requisiÃ§Ã£o Ã© assÃ­ncrona (nÃ£o bloqueante).
// xhr.send();
// O mÃ©todo send envia a requisiÃ§Ã£o para o servidor.
// Evento de Carregamento:
// xhr.addEventListener('load', () => {...});
// Registra um ouvinte para o evento de carregamento.
// Quando a resposta da requisiÃ§Ã£o Ã© carregada, o cÃ³digo dentro da funÃ§Ã£o de callback Ã© executado.
// VerificaÃ§Ã£o do Status da Resposta:
// if (xhr.status >= 200 && xhr.status < 300) {...}
// Verifica se o status da resposta estÃ¡ na faixa de sucesso (cÃ³digos 2xx).
// Se for verdadeiro, chama a funÃ§Ã£o obj.success com o conteÃºdo da resposta (xhr.responseText).
// Caso contrÃ¡rio:
// Chama a funÃ§Ã£o obj.erro com o texto do status da resposta (xhr.statusText).
// Em resumo, essa funÃ§Ã£o request Ã© usada para fazer uma requisiÃ§Ã£o HTTP e manipular a resposta com base no status retornado pelo servidor. Ela permite que vocÃª execute aÃ§Ãµes especÃ­ficas quando a requisiÃ§Ã£o Ã© bem-sucedida ou quando ocorre um erro. ğŸ˜Š